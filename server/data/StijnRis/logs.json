{"eventType":"editorFileSwitch","timestamp":"2025-06-04T15:35:24.355Z","sessionId":"d30952c0-9476-45fb-89bf-f56920301ac81749051311891","machineId":"fd4a8ea53364d533d6ee2311b870e28da1dbe5fd5041115f12000ffdebc1c20f","githubUsername":"StijnRis","data":{"documentPath":"tasks"}}
{"eventType":"documentOpen","timestamp":"2025-06-04T15:35:24.337Z","sessionId":"d30952c0-9476-45fb-89bf-f56920301ac81749051311891","machineId":"fd4a8ea53364d533d6ee2311b870e28da1dbe5fd5041115f12000ffdebc1c20f","githubUsername":"StijnRis","data":{"documentPath":"tasks","documentText":""}}
{"eventType":"documentClose","timestamp":"2025-06-04T15:35:32.919Z","sessionId":"d30952c0-9476-45fb-89bf-f56920301ac81749051311891","machineId":"fd4a8ea53364d533d6ee2311b870e28da1dbe5fd5041115f12000ffdebc1c20f","githubUsername":"StijnRis","data":{"documentPath":"tasks"}}
{"eventType":"documentOpen","timestamp":"2025-06-04T15:35:32.935Z","sessionId":"d30952c0-9476-45fb-89bf-f56920301ac81749051311891","machineId":"fd4a8ea53364d533d6ee2311b870e28da1dbe5fd5041115f12000ffdebc1c20f","githubUsername":"StijnRis","data":{"documentPath":"extension-output-vscodeTutor.tutor-#1-Tutor","documentText":""}}
{"eventType":"editorFileSwitch","timestamp":"2025-06-04T15:35:32.923Z","sessionId":"d30952c0-9476-45fb-89bf-f56920301ac81749051311891","machineId":"fd4a8ea53364d533d6ee2311b870e28da1dbe5fd5041115f12000ffdebc1c20f","githubUsername":"StijnRis","data":{"documentPath":"c:\\University\\Honours\\Test\\main.py"}}
{"eventType":"editorFileSwitch","timestamp":"2025-06-04T15:41:37.310Z","sessionId":"f8ec6b9a-a9ea-4166-b5c4-9dad60a4e6551749051647266","machineId":"fd4a8ea53364d533d6ee2311b870e28da1dbe5fd5041115f12000ffdebc1c20f","githubUsername":"StijnRis","data":{"documentPath":"extension-output-vscodeTutor.tutor-#1-Tutor"}}
{"eventType":"editorFileSwitch","timestamp":"2025-06-04T15:41:48.740Z","sessionId":"f8ec6b9a-a9ea-4166-b5c4-9dad60a4e6551749051647266","machineId":"fd4a8ea53364d533d6ee2311b870e28da1dbe5fd5041115f12000ffdebc1c20f","githubUsername":"StijnRis","data":{"documentPath":"c:\\University\\Honours\\Test\\main.py"}}
{"eventType":"documentClose","timestamp":"2025-06-04T15:41:49.568Z","sessionId":"f8ec6b9a-a9ea-4166-b5c4-9dad60a4e6551749051647266","machineId":"fd4a8ea53364d533d6ee2311b870e28da1dbe5fd5041115f12000ffdebc1c20f","githubUsername":"StijnRis","data":{"documentPath":"c:\\Python311\\Lib\\site-packages\\pygame\\__init__.py"}}
{"eventType":"documentOpen","timestamp":"2025-06-04T15:41:49.563Z","sessionId":"f8ec6b9a-a9ea-4166-b5c4-9dad60a4e6551749051647266","machineId":"fd4a8ea53364d533d6ee2311b870e28da1dbe5fd5041115f12000ffdebc1c20f","githubUsername":"StijnRis","data":{"documentPath":"c:\\Python311\\Lib\\site-packages\\pygame\\__init__.py","documentText":"# pygame - Python Game Library\n# Copyright (C) 2000-2001  Pete Shinners\n#\n# This library is free software; you can redistribute it and/or\n# modify it under the terms of the GNU Library General Public\n# License as published by the Free Software Foundation; either\n# version 2 of the License, or (at your option) any later version.\n#\n# This library is distributed in the hope that it will be useful,\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n# Library General Public License for more details.\n#\n# You should have received a copy of the GNU Library General Public\n# License along with this library; if not, write to the Free\n# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n#\n# Pete Shinners\n# pete@shinners.org\n\"\"\"Pygame is a set of Python modules designed for writing games.\nIt is written on top of the excellent SDL library. This allows you\nto create fully featured games and multimedia programs in the python\nlanguage. The package is highly portable, with games running on\nWindows, MacOS, OS X, BeOS, FreeBSD, IRIX, and Linux.\"\"\"\n\nimport sys\nimport os\n\n# Choose Windows display driver\nif os.name == \"nt\":\n    pygame_dir = os.path.split(__file__)[0]\n\n    # pypy does not find the dlls, so we add package folder to PATH.\n    os.environ[\"PATH\"] = os.environ[\"PATH\"] + \";\" + pygame_dir\n\n    # windows store python does not find the dlls, so we run this\n    if sys.version_info > (3, 8):\n        os.add_dll_directory(pygame_dir)  # only available in 3.8+\n\n    # cleanup namespace\n    del pygame_dir\n\n# when running under X11, always set the SDL window WM_CLASS to make the\n#   window managers correctly match the pygame window.\nelif \"DISPLAY\" in os.environ and \"SDL_VIDEO_X11_WMCLASS\" not in os.environ:\n    os.environ[\"SDL_VIDEO_X11_WMCLASS\"] = os.path.basename(sys.argv[0])\n\n\ndef _attribute_undefined(name):\n    raise RuntimeError(f\"{name} is not available\")\n\n\nclass MissingModule:\n    _NOT_IMPLEMENTED_ = True\n\n    def __init__(self, name, urgent=0):\n        self.name = name\n        exc_type, exc_msg = sys.exc_info()[:2]\n        self.info = str(exc_msg)\n        self.reason = f\"{exc_type.__name__}: {self.info}\"\n        self.urgent = urgent\n        if urgent:\n            self.warn()\n\n    def __getattr__(self, var):\n        if not self.urgent:\n            self.warn()\n            self.urgent = 1\n        missing_msg = f\"{self.name} module not available ({self.reason})\"\n        raise NotImplementedError(missing_msg)\n\n    def __bool__(self):\n        return False\n\n    def warn(self):\n        msg_type = \"import\" if self.urgent else \"use\"\n        message = f\"{msg_type} {self.name}: {self.info}\\n({self.reason})\"\n        try:\n            import warnings\n\n            level = 4 if self.urgent else 3\n            warnings.warn(message, RuntimeWarning, level)\n        except ImportError:\n            print(message)\n\n\n# we need to import like this, each at a time. the cleanest way to import\n# our modules is with the import command (not the __import__ function)\n# isort: skip_file\n\n# first, the \"required\" modules\nfrom pygame.base import *  # pylint: disable=wildcard-import; lgtm[py/polluting-import]\nfrom pygame.constants import *  # now has __all__ pylint: disable=wildcard-import; lgtm[py/polluting-import]\nfrom pygame.version import *  # pylint: disable=wildcard-import; lgtm[py/polluting-import]\nfrom pygame.rect import Rect\nfrom pygame.rwobject import encode_string, encode_file_path\nimport pygame.surflock\nimport pygame.color\n\nColor = pygame.color.Color\nimport pygame.bufferproxy\n\nBufferProxy = pygame.bufferproxy.BufferProxy\nimport pygame.math\n\nVector2 = pygame.math.Vector2\nVector3 = pygame.math.Vector3\n\n__version__ = ver\n\n# next, the \"standard\" modules\n# we still allow them to be missing for stripped down pygame distributions\nif get_sdl_version() < (2, 0, 0):\n    # cdrom only available for SDL 1.2.X\n    try:\n        import pygame.cdrom\n    except (ImportError, OSError):\n        cdrom = MissingModule(\"cdrom\", urgent=1)\n\ntry:\n    import pygame.display\nexcept (ImportError, OSError):\n    display = MissingModule(\"display\", urgent=1)\n\ntry:\n    import pygame.draw\nexcept (ImportError, OSError):\n    draw = MissingModule(\"draw\", urgent=1)\n\ntry:\n    import pygame.event\nexcept (ImportError, OSError):\n    event = MissingModule(\"event\", urgent=1)\n\ntry:\n    import pygame.image\nexcept (ImportError, OSError):\n    image = MissingModule(\"image\", urgent=1)\n\ntry:\n    import pygame.joystick\nexcept (ImportError, OSError):\n    joystick = MissingModule(\"joystick\", urgent=1)\n\ntry:\n    import pygame.key\nexcept (ImportError, OSError):\n    key = MissingModule(\"key\", urgent=1)\n\ntry:\n    import pygame.mouse\nexcept (ImportError, OSError):\n    mouse = MissingModule(\"mouse\", urgent=1)\n\ntry:\n    import pygame.cursors\n    from pygame.cursors import Cursor\nexcept (ImportError, OSError):\n    cursors = MissingModule(\"cursors\", urgent=1)\n\n    def Cursor(*args):  # pylint: disable=unused-argument\n        _attribute_undefined(\"pygame.Cursor\")\n\n\ntry:\n    import pygame.sprite\nexcept (ImportError, OSError):\n    sprite = MissingModule(\"sprite\", urgent=1)\n\ntry:\n    import pygame.threads\nexcept (ImportError, OSError):\n    threads = MissingModule(\"threads\", urgent=1)\n\ntry:\n    import pygame.pixelcopy\nexcept (ImportError, OSError):\n    pixelcopy = MissingModule(\"pixelcopy\", urgent=1)\n\n\ntry:\n    from pygame.surface import Surface, SurfaceType\nexcept (ImportError, OSError):\n\n    def Surface(size, flags, depth, masks):  # pylint: disable=unused-argument\n        _attribute_undefined(\"pygame.Surface\")\n\n    SurfaceType = Surface\n\ntry:\n    import pygame.mask\n    from pygame.mask import Mask\nexcept (ImportError, OSError):\n    mask = MissingModule(\"mask\", urgent=0)\n\n    def Mask(size, fill):  # pylint: disable=unused-argument\n        _attribute_undefined(\"pygame.Mask\")\n\n\ntry:\n    from pygame.pixelarray import PixelArray\nexcept (ImportError, OSError):\n\n    def PixelArray(surface):  # pylint: disable=unused-argument\n        _attribute_undefined(\"pygame.PixelArray\")\n\n\ntry:\n    from pygame.overlay import Overlay\nexcept (ImportError, OSError):\n\n    def Overlay(format, size):  # pylint: disable=unused-argument\n        _attribute_undefined(\"pygame.Overlay\")\n\n\ntry:\n    import pygame.time\nexcept (ImportError, OSError):\n    time = MissingModule(\"time\", urgent=1)\n\ntry:\n    import pygame.transform\nexcept (ImportError, OSError):\n    transform = MissingModule(\"transform\", urgent=1)\n\n# lastly, the \"optional\" pygame modules\nif \"PYGAME_FREETYPE\" in os.environ:\n    try:\n        import pygame.ftfont as font\n\n        sys.modules[\"pygame.font\"] = font\n    except (ImportError, OSError):\n        pass\ntry:\n    import pygame.font\n    import pygame.sysfont\n\n    pygame.font.SysFont = pygame.sysfont.SysFont\n    pygame.font.get_fonts = pygame.sysfont.get_fonts\n    pygame.font.match_font = pygame.sysfont.match_font\nexcept (ImportError, OSError):\n    font = MissingModule(\"font\", urgent=0)\n\n# try and load pygame.mixer_music before mixer, for py2app...\ntry:\n    import pygame.mixer_music\n\n    # del pygame.mixer_music\n    # print(\"NOTE2: failed importing pygame.mixer_music in lib/__init__.py\")\nexcept (ImportError, OSError):\n    pass\n\ntry:\n    import pygame.mixer\nexcept (ImportError, OSError):\n    mixer = MissingModule(\"mixer\", urgent=0)\n\ntry:\n    import pygame.scrap\nexcept (ImportError, OSError):\n    scrap = MissingModule(\"scrap\", urgent=0)\n\ntry:\n    import pygame.surfarray\nexcept (ImportError, OSError):\n    surfarray = MissingModule(\"surfarray\", urgent=0)\n\ntry:\n    import pygame.sndarray\nexcept (ImportError, OSError):\n    sndarray = MissingModule(\"sndarray\", urgent=0)\n\ntry:\n    import pygame.fastevent\nexcept (ImportError, OSError):\n    fastevent = MissingModule(\"fastevent\", urgent=0)\n\n# there's also a couple \"internal\" modules not needed\n# by users, but putting them here helps \"dependency finder\"\n# programs get everything they need (like py2exe)\ntry:\n    import pygame.imageext\n\n    del pygame.imageext\nexcept (ImportError, OSError):\n    pass\n\n# this internal module needs to be included for dependency\n# finders, but can't be deleted, as some tests need it\ntry:\n    import pygame.pkgdata\n\nexcept (ImportError, OSError):\n    pass\n\n\ndef packager_imports():\n    \"\"\"some additional imports that py2app/py2exe will want to see\"\"\"\n    import atexit\n    import numpy\n    import OpenGL.GL\n    import pygame.macosx\n    import pygame.colordict\n\n\n# make Rects pickleable\n\nimport copyreg\n\n\ndef __rect_constructor(x, y, w, h):\n    return Rect(x, y, w, h)\n\n\ndef __rect_reduce(r):\n    assert isinstance(r, Rect)\n    return __rect_constructor, (r.x, r.y, r.w, r.h)\n\n\ncopyreg.pickle(Rect, __rect_reduce, __rect_constructor)\n\n\n# make Colors pickleable\ndef __color_constructor(r, g, b, a):\n    return Color(r, g, b, a)\n\n\ndef __color_reduce(c):\n    assert isinstance(c, Color)\n    return __color_constructor, (c.r, c.g, c.b, c.a)\n\n\ncopyreg.pickle(Color, __color_reduce, __color_constructor)\n\n# Thanks for supporting pygame. Without support now, there won't be pygame later.\nif \"PYGAME_HIDE_SUPPORT_PROMPT\" not in os.environ:\n    print(\n        \"pygame {} (SDL {}.{}.{}, Python {}.{}.{})\".format(  # pylint: disable=consider-using-f-string\n            ver, *get_sdl_version() + sys.version_info[0:3]\n        )\n    )\n    print(\"Hello from the pygame community. https://www.pygame.org/contribute.html\")\n\n# cleanup namespace\ndel pygame, os, sys, MissingModule, copyreg, packager_imports\n"}}
{"eventType":"editorFileSwitch","timestamp":"2025-06-04T15:48:04.002Z","sessionId":"70029f52-a616-417e-a490-809a39e2a99e1749052034810","machineId":"fd4a8ea53364d533d6ee2311b870e28da1dbe5fd5041115f12000ffdebc1c20f","githubUsername":"StijnRis","data":{"documentPath":"c:\\University\\Honours\\Test\\main.py"}}
{"eventType":"editorFileSwitch","timestamp":"2025-06-04T15:49:09.653Z","sessionId":"62103da9-8522-4816-a380-708a48d728c71749052127428","machineId":"fd4a8ea53364d533d6ee2311b870e28da1dbe5fd5041115f12000ffdebc1c20f","githubUsername":"StijnRis","data":{"documentPath":"c:\\University\\Honours\\Test\\main.py"}}
{"eventType":"editorFileSwitch","timestamp":"2025-06-04T15:55:19.219Z","sessionId":"96e3d01a-5358-4a8a-8083-a36ca9e093e91749052485325","machineId":"fd4a8ea53364d533d6ee2311b870e28da1dbe5fd5041115f12000ffdebc1c20f","githubUsername":"StijnRis","data":{"documentPath":"c:\\University\\Honours\\Test\\main.py"}}
{"eventType":"editorFileSwitch","timestamp":"2025-06-04T15:57:15.141Z","sessionId":"8148caec-eae8-40b4-8f57-052d9eb3ceea1749052618811","machineId":"fd4a8ea53364d533d6ee2311b870e28da1dbe5fd5041115f12000ffdebc1c20f","githubUsername":"StijnRis","data":{"documentPath":"c:\\University\\Honours\\Test\\main.py"}}
{"eventType":"documentOpen","timestamp":"2025-06-04T15:57:46.830Z","sessionId":"8148caec-eae8-40b4-8f57-052d9eb3ceea1749052618811","machineId":"fd4a8ea53364d533d6ee2311b870e28da1dbe5fd5041115f12000ffdebc1c20f","githubUsername":"StijnRis","data":{"documentPath":"c:\\Python311\\Lib\\site-packages\\pygame\\constants.pyi","documentText":"# buildconfig/stubs/gen_stubs.py\n# A script to auto-generate locals.pyi, constants.pyi and __init__.pyi typestubs\n# IMPORTANT NOTE: Do not edit this file by hand!\n\nACTIVEEVENT: int\nANYFORMAT: int\nAPPACTIVE: int\nAPPINPUTFOCUS: int\nAPPMOUSEFOCUS: int\nAPP_DIDENTERBACKGROUND: int\nAPP_DIDENTERFOREGROUND: int\nAPP_LOWMEMORY: int\nAPP_TERMINATING: int\nAPP_WILLENTERBACKGROUND: int\nAPP_WILLENTERFOREGROUND: int\nASYNCBLIT: int\nAUDIODEVICEADDED: int\nAUDIODEVICEREMOVED: int\nAUDIO_ALLOW_ANY_CHANGE: int\nAUDIO_ALLOW_CHANNELS_CHANGE: int\nAUDIO_ALLOW_FORMAT_CHANGE: int\nAUDIO_ALLOW_FREQUENCY_CHANGE: int\nAUDIO_S16: int\nAUDIO_S16LSB: int\nAUDIO_S16MSB: int\nAUDIO_S16SYS: int\nAUDIO_S8: int\nAUDIO_U16: int\nAUDIO_U16LSB: int\nAUDIO_U16MSB: int\nAUDIO_U16SYS: int\nAUDIO_U8: int\nBIG_ENDIAN: int\nBLENDMODE_ADD: int\nBLENDMODE_BLEND: int\nBLENDMODE_MOD: int\nBLENDMODE_NONE: int\nBLEND_ADD: int\nBLEND_ALPHA_SDL2: int\nBLEND_MAX: int\nBLEND_MIN: int\nBLEND_MULT: int\nBLEND_PREMULTIPLIED: int\nBLEND_RGBA_ADD: int\nBLEND_RGBA_MAX: int\nBLEND_RGBA_MIN: int\nBLEND_RGBA_MULT: int\nBLEND_RGBA_SUB: int\nBLEND_RGB_ADD: int\nBLEND_RGB_MAX: int\nBLEND_RGB_MIN: int\nBLEND_RGB_MULT: int\nBLEND_RGB_SUB: int\nBLEND_SUB: int\nBUTTON_LEFT: int\nBUTTON_MIDDLE: int\nBUTTON_RIGHT: int\nBUTTON_WHEELDOWN: int\nBUTTON_WHEELUP: int\nBUTTON_X1: int\nBUTTON_X2: int\nCLIPBOARDUPDATE: int\nCONTROLLERAXISMOTION: int\nCONTROLLERBUTTONDOWN: int\nCONTROLLERBUTTONUP: int\nCONTROLLERDEVICEADDED: int\nCONTROLLERDEVICEREMAPPED: int\nCONTROLLERDEVICEREMOVED: int\nCONTROLLERSENSORUPDATE: int\nCONTROLLERTOUCHPADDOWN: int\nCONTROLLERTOUCHPADMOTION: int\nCONTROLLERTOUCHPADUP: int\nCONTROLLER_AXIS_INVALID: int\nCONTROLLER_AXIS_LEFTX: int\nCONTROLLER_AXIS_LEFTY: int\nCONTROLLER_AXIS_MAX: int\nCONTROLLER_AXIS_RIGHTX: int\nCONTROLLER_AXIS_RIGHTY: int\nCONTROLLER_AXIS_TRIGGERLEFT: int\nCONTROLLER_AXIS_TRIGGERRIGHT: int\nCONTROLLER_BUTTON_A: int\nCONTROLLER_BUTTON_B: int\nCONTROLLER_BUTTON_BACK: int\nCONTROLLER_BUTTON_DPAD_DOWN: int\nCONTROLLER_BUTTON_DPAD_LEFT: int\nCONTROLLER_BUTTON_DPAD_RIGHT: int\nCONTROLLER_BUTTON_DPAD_UP: int\nCONTROLLER_BUTTON_GUIDE: int\nCONTROLLER_BUTTON_INVALID: int\nCONTROLLER_BUTTON_LEFTSHOULDER: int\nCONTROLLER_BUTTON_LEFTSTICK: int\nCONTROLLER_BUTTON_MAX: int\nCONTROLLER_BUTTON_RIGHTSHOULDER: int\nCONTROLLER_BUTTON_RIGHTSTICK: int\nCONTROLLER_BUTTON_START: int\nCONTROLLER_BUTTON_X: int\nCONTROLLER_BUTTON_Y: int\nDOUBLEBUF: int\nDROPBEGIN: int\nDROPCOMPLETE: int\nDROPFILE: int\nDROPTEXT: int\nFINGERDOWN: int\nFINGERMOTION: int\nFINGERUP: int\nFULLSCREEN: int\nGL_ACCELERATED_VISUAL: int\nGL_ACCUM_ALPHA_SIZE: int\nGL_ACCUM_BLUE_SIZE: int\nGL_ACCUM_GREEN_SIZE: int\nGL_ACCUM_RED_SIZE: int\nGL_ALPHA_SIZE: int\nGL_BLUE_SIZE: int\nGL_BUFFER_SIZE: int\nGL_CONTEXT_DEBUG_FLAG: int\nGL_CONTEXT_FLAGS: int\nGL_CONTEXT_FORWARD_COMPATIBLE_FLAG: int\nGL_CONTEXT_MAJOR_VERSION: int\nGL_CONTEXT_MINOR_VERSION: int\nGL_CONTEXT_PROFILE_COMPATIBILITY: int\nGL_CONTEXT_PROFILE_CORE: int\nGL_CONTEXT_PROFILE_ES: int\nGL_CONTEXT_PROFILE_MASK: int\nGL_CONTEXT_RELEASE_BEHAVIOR: int\nGL_CONTEXT_RELEASE_BEHAVIOR_FLUSH: int\nGL_CONTEXT_RELEASE_BEHAVIOR_NONE: int\nGL_CONTEXT_RESET_ISOLATION_FLAG: int\nGL_CONTEXT_ROBUST_ACCESS_FLAG: int\nGL_DEPTH_SIZE: int\nGL_DOUBLEBUFFER: int\nGL_FRAMEBUFFER_SRGB_CAPABLE: int\nGL_GREEN_SIZE: int\nGL_MULTISAMPLEBUFFERS: int\nGL_MULTISAMPLESAMPLES: int\nGL_RED_SIZE: int\nGL_SHARE_WITH_CURRENT_CONTEXT: int\nGL_STENCIL_SIZE: int\nGL_STEREO: int\nGL_SWAP_CONTROL: int\nHAT_CENTERED: int\nHAT_DOWN: int\nHAT_LEFT: int\nHAT_LEFTDOWN: int\nHAT_LEFTUP: int\nHAT_RIGHT: int\nHAT_RIGHTDOWN: int\nHAT_RIGHTUP: int\nHAT_UP: int\nHIDDEN: int\nHWACCEL: int\nHWPALETTE: int\nHWSURFACE: int\nJOYAXISMOTION: int\nJOYBALLMOTION: int\nJOYBUTTONDOWN: int\nJOYBUTTONUP: int\nJOYDEVICEADDED: int\nJOYDEVICEREMOVED: int\nJOYHATMOTION: int\nKEYDOWN: int\nKEYMAPCHANGED: int\nKEYUP: int\nKMOD_ALT: int\nKMOD_CAPS: int\nKMOD_CTRL: int\nKMOD_GUI: int\nKMOD_LALT: int\nKMOD_LCTRL: int\nKMOD_LGUI: int\nKMOD_LMETA: int\nKMOD_LSHIFT: int\nKMOD_META: int\nKMOD_MODE: int\nKMOD_NONE: int\nKMOD_NUM: int\nKMOD_RALT: int\nKMOD_RCTRL: int\nKMOD_RGUI: int\nKMOD_RMETA: int\nKMOD_RSHIFT: int\nKMOD_SHIFT: int\nKSCAN_0: int\nKSCAN_1: int\nKSCAN_2: int\nKSCAN_3: int\nKSCAN_4: int\nKSCAN_5: int\nKSCAN_6: int\nKSCAN_7: int\nKSCAN_8: int\nKSCAN_9: int\nKSCAN_A: int\nKSCAN_AC_BACK: int\nKSCAN_APOSTROPHE: int\nKSCAN_B: int\nKSCAN_BACKSLASH: int\nKSCAN_BACKSPACE: int\nKSCAN_BREAK: int\nKSCAN_C: int\nKSCAN_CAPSLOCK: int\nKSCAN_CLEAR: int\nKSCAN_COMMA: int\nKSCAN_CURRENCYSUBUNIT: int\nKSCAN_CURRENCYUNIT: int\nKSCAN_D: int\nKSCAN_DELETE: int\nKSCAN_DOWN: int\nKSCAN_E: int\nKSCAN_END: int\nKSCAN_EQUALS: int\nKSCAN_ESCAPE: int\nKSCAN_EURO: int\nKSCAN_F: int\nKSCAN_F1: int\nKSCAN_F10: int\nKSCAN_F11: int\nKSCAN_F12: int\nKSCAN_F13: int\nKSCAN_F14: int\nKSCAN_F15: int\nKSCAN_F2: int\nKSCAN_F3: int\nKSCAN_F4: int\nKSCAN_F5: int\nKSCAN_F6: int\nKSCAN_F7: int\nKSCAN_F8: int\nKSCAN_F9: int\nKSCAN_G: int\nKSCAN_GRAVE: int\nKSCAN_H: int\nKSCAN_HELP: int\nKSCAN_HOME: int\nKSCAN_I: int\nKSCAN_INSERT: int\nKSCAN_INTERNATIONAL1: int\nKSCAN_INTERNATIONAL2: int\nKSCAN_INTERNATIONAL3: int\nKSCAN_INTERNATIONAL4: int\nKSCAN_INTERNATIONAL5: int\nKSCAN_INTERNATIONAL6: int\nKSCAN_INTERNATIONAL7: int\nKSCAN_INTERNATIONAL8: int\nKSCAN_INTERNATIONAL9: int\nKSCAN_J: int\nKSCAN_K: int\nKSCAN_KP0: int\nKSCAN_KP1: int\nKSCAN_KP2: int\nKSCAN_KP3: int\nKSCAN_KP4: int\nKSCAN_KP5: int\nKSCAN_KP6: int\nKSCAN_KP7: int\nKSCAN_KP8: int\nKSCAN_KP9: int\nKSCAN_KP_0: int\nKSCAN_KP_1: int\nKSCAN_KP_2: int\nKSCAN_KP_3: int\nKSCAN_KP_4: int\nKSCAN_KP_5: int\nKSCAN_KP_6: int\nKSCAN_KP_7: int\nKSCAN_KP_8: int\nKSCAN_KP_9: int\nKSCAN_KP_DIVIDE: int\nKSCAN_KP_ENTER: int\nKSCAN_KP_EQUALS: int\nKSCAN_KP_MINUS: int\nKSCAN_KP_MULTIPLY: int\nKSCAN_KP_PERIOD: int\nKSCAN_KP_PLUS: int\nKSCAN_L: int\nKSCAN_LALT: int\nKSCAN_LANG1: int\nKSCAN_LANG2: int\nKSCAN_LANG3: int\nKSCAN_LANG4: int\nKSCAN_LANG5: int\nKSCAN_LANG6: int\nKSCAN_LANG7: int\nKSCAN_LANG8: int\nKSCAN_LANG9: int\nKSCAN_LCTRL: int\nKSCAN_LEFT: int\nKSCAN_LEFTBRACKET: int\nKSCAN_LGUI: int\nKSCAN_LMETA: int\nKSCAN_LSHIFT: int\nKSCAN_LSUPER: int\nKSCAN_M: int\nKSCAN_MENU: int\nKSCAN_MINUS: int\nKSCAN_MODE: int\nKSCAN_N: int\nKSCAN_NONUSBACKSLASH: int\nKSCAN_NONUSHASH: int\nKSCAN_NUMLOCK: int\nKSCAN_NUMLOCKCLEAR: int\nKSCAN_O: int\nKSCAN_P: int\nKSCAN_PAGEDOWN: int\nKSCAN_PAGEUP: int\nKSCAN_PAUSE: int\nKSCAN_PERIOD: int\nKSCAN_POWER: int\nKSCAN_PRINT: int\nKSCAN_PRINTSCREEN: int\nKSCAN_Q: int\nKSCAN_R: int\nKSCAN_RALT: int\nKSCAN_RCTRL: int\nKSCAN_RETURN: int\nKSCAN_RGUI: int\nKSCAN_RIGHT: int\nKSCAN_RIGHTBRACKET: int\nKSCAN_RMETA: int\nKSCAN_RSHIFT: int\nKSCAN_RSUPER: int\nKSCAN_S: int\nKSCAN_SCROLLLOCK: int\nKSCAN_SCROLLOCK: int\nKSCAN_SEMICOLON: int\nKSCAN_SLASH: int\nKSCAN_SPACE: int\nKSCAN_SYSREQ: int\nKSCAN_T: int\nKSCAN_TAB: int\nKSCAN_U: int\nKSCAN_UNKNOWN: int\nKSCAN_UP: int\nKSCAN_V: int\nKSCAN_W: int\nKSCAN_X: int\nKSCAN_Y: int\nKSCAN_Z: int\nK_0: int\nK_1: int\nK_2: int\nK_3: int\nK_4: int\nK_5: int\nK_6: int\nK_7: int\nK_8: int\nK_9: int\nK_AC_BACK: int\nK_AMPERSAND: int\nK_ASTERISK: int\nK_AT: int\nK_BACKQUOTE: int\nK_BACKSLASH: int\nK_BACKSPACE: int\nK_BREAK: int\nK_CAPSLOCK: int\nK_CARET: int\nK_CLEAR: int\nK_COLON: int\nK_COMMA: int\nK_CURRENCYSUBUNIT: int\nK_CURRENCYUNIT: int\nK_DELETE: int\nK_DOLLAR: int\nK_DOWN: int\nK_END: int\nK_EQUALS: int\nK_ESCAPE: int\nK_EURO: int\nK_EXCLAIM: int\nK_F1: int\nK_F10: int\nK_F11: int\nK_F12: int\nK_F13: int\nK_F14: int\nK_F15: int\nK_F2: int\nK_F3: int\nK_F4: int\nK_F5: int\nK_F6: int\nK_F7: int\nK_F8: int\nK_F9: int\nK_GREATER: int\nK_HASH: int\nK_HELP: int\nK_HOME: int\nK_INSERT: int\nK_KP0: int\nK_KP1: int\nK_KP2: int\nK_KP3: int\nK_KP4: int\nK_KP5: int\nK_KP6: int\nK_KP7: int\nK_KP8: int\nK_KP9: int\nK_KP_0: int\nK_KP_1: int\nK_KP_2: int\nK_KP_3: int\nK_KP_4: int\nK_KP_5: int\nK_KP_6: int\nK_KP_7: int\nK_KP_8: int\nK_KP_9: int\nK_KP_DIVIDE: int\nK_KP_ENTER: int\nK_KP_EQUALS: int\nK_KP_MINUS: int\nK_KP_MULTIPLY: int\nK_KP_PERIOD: int\nK_KP_PLUS: int\nK_LALT: int\nK_LCTRL: int\nK_LEFT: int\nK_LEFTBRACKET: int\nK_LEFTPAREN: int\nK_LESS: int\nK_LGUI: int\nK_LMETA: int\nK_LSHIFT: int\nK_LSUPER: int\nK_MENU: int\nK_MINUS: int\nK_MODE: int\nK_NUMLOCK: int\nK_NUMLOCKCLEAR: int\nK_PAGEDOWN: int\nK_PAGEUP: int\nK_PAUSE: int\nK_PERCENT: int\nK_PERIOD: int\nK_PLUS: int\nK_POWER: int\nK_PRINT: int\nK_PRINTSCREEN: int\nK_QUESTION: int\nK_QUOTE: int\nK_QUOTEDBL: int\nK_RALT: int\nK_RCTRL: int\nK_RETURN: int\nK_RGUI: int\nK_RIGHT: int\nK_RIGHTBRACKET: int\nK_RIGHTPAREN: int\nK_RMETA: int\nK_RSHIFT: int\nK_RSUPER: int\nK_SCROLLLOCK: int\nK_SCROLLOCK: int\nK_SEMICOLON: int\nK_SLASH: int\nK_SPACE: int\nK_SYSREQ: int\nK_TAB: int\nK_UNDERSCORE: int\nK_UNKNOWN: int\nK_UP: int\nK_a: int\nK_b: int\nK_c: int\nK_d: int\nK_e: int\nK_f: int\nK_g: int\nK_h: int\nK_i: int\nK_j: int\nK_k: int\nK_l: int\nK_m: int\nK_n: int\nK_o: int\nK_p: int\nK_q: int\nK_r: int\nK_s: int\nK_t: int\nK_u: int\nK_v: int\nK_w: int\nK_x: int\nK_y: int\nK_z: int\nLIL_ENDIAN: int\nLOCALECHANGED: int\nMIDIIN: int\nMIDIOUT: int\nMOUSEBUTTONDOWN: int\nMOUSEBUTTONUP: int\nMOUSEMOTION: int\nMOUSEWHEEL: int\nMULTIGESTURE: int\nNOEVENT: int\nNOFRAME: int\nNUMEVENTS: int\nOPENGL: int\nOPENGLBLIT: int\nPREALLOC: int\nQUIT: int\nRENDER_DEVICE_RESET: int\nRENDER_TARGETS_RESET: int\nRESIZABLE: int\nRLEACCEL: int\nRLEACCELOK: int\nSCALED: int\nSCRAP_BMP: str\nSCRAP_CLIPBOARD: int\nSCRAP_PBM: str\nSCRAP_PPM: str\nSCRAP_SELECTION: int\nSCRAP_TEXT: str\nSHOWN: int\nSRCALPHA: int\nSRCCOLORKEY: int\nSWSURFACE: int\nSYSTEM_CURSOR_ARROW: int\nSYSTEM_CURSOR_CROSSHAIR: int\nSYSTEM_CURSOR_HAND: int\nSYSTEM_CURSOR_IBEAM: int\nSYSTEM_CURSOR_NO: int\nSYSTEM_CURSOR_SIZEALL: int\nSYSTEM_CURSOR_SIZENESW: int\nSYSTEM_CURSOR_SIZENS: int\nSYSTEM_CURSOR_SIZENWSE: int\nSYSTEM_CURSOR_SIZEWE: int\nSYSTEM_CURSOR_WAIT: int\nSYSTEM_CURSOR_WAITARROW: int\nSYSWMEVENT: int\nTEXTEDITING: int\nTEXTINPUT: int\nTIMER_RESOLUTION: int\nUSEREVENT: int\nUSEREVENT_DROPFILE: int\nVIDEOEXPOSE: int\nVIDEORESIZE: int\nWINDOWCLOSE: int\nWINDOWDISPLAYCHANGED: int\nWINDOWENTER: int\nWINDOWEXPOSED: int\nWINDOWFOCUSGAINED: int\nWINDOWFOCUSLOST: int\nWINDOWHIDDEN: int\nWINDOWHITTEST: int\nWINDOWICCPROFCHANGED: int\nWINDOWLEAVE: int\nWINDOWMAXIMIZED: int\nWINDOWMINIMIZED: int\nWINDOWMOVED: int\nWINDOWRESIZED: int\nWINDOWRESTORED: int\nWINDOWSHOWN: int\nWINDOWSIZECHANGED: int\nWINDOWTAKEFOCUS: int\n"}}
{"eventType":"documentClose","timestamp":"2025-06-04T15:57:46.837Z","sessionId":"8148caec-eae8-40b4-8f57-052d9eb3ceea1749052618811","machineId":"fd4a8ea53364d533d6ee2311b870e28da1dbe5fd5041115f12000ffdebc1c20f","githubUsername":"StijnRis","data":{"documentPath":"c:\\Python311\\Lib\\site-packages\\pygame\\constants.pyi"}}
{"eventType":"editorFileSwitch","timestamp":"2025-06-04T15:58:04.519Z","sessionId":"5e9d310b-5a90-4ecc-9672-2a6cda673f671749052668235","machineId":"fd4a8ea53364d533d6ee2311b870e28da1dbe5fd5041115f12000ffdebc1c20f","githubUsername":"StijnRis","data":{"documentPath":"c:\\University\\Honours\\Test\\main.py"}}
{"eventType":"documentClose","timestamp":"2025-06-04T15:58:26.492Z","sessionId":"5e9d310b-5a90-4ecc-9672-2a6cda673f671749052668235","machineId":"fd4a8ea53364d533d6ee2311b870e28da1dbe5fd5041115f12000ffdebc1c20f","githubUsername":"StijnRis","data":{"documentPath":"tasks"}}
{"eventType":"execution","timestamp":"2025-06-04T15:58:40.484Z","sessionId":"5e9d310b-5a90-4ecc-9672-2a6cda673f671749052668235","machineId":"fd4a8ea53364d533d6ee2311b870e28da1dbe5fd5041115f12000ffdebc1c20f","githubUsername":"StijnRis","data":{"command":" & 'c:\\Python311\\python.exe' 'c:\\Users\\risse\\.vscode\\extensions\\ms-python.debugpy-2025.8.0-win32-x64\\bundled\\libs\\debugpy\\launcher' '52079' '--' 'C:\\University\\Honours\\Test\\main.py' ","durationMs":13426,"result":"\u001b]633;C\u0007pygame 2.6.1 (SDL 2.28.4, Python 3.11.4)\r\nHello from the pygame community. https://www.pygame.org/contribute.html\r\nhello world\r\nHellow world\r\n"}}
{"eventType":"execution","timestamp":"2025-06-04T15:58:45.198Z","sessionId":"5e9d310b-5a90-4ecc-9672-2a6cda673f671749052668235","machineId":"fd4a8ea53364d533d6ee2311b870e28da1dbe5fd5041115f12000ffdebc1c20f","githubUsername":"StijnRis","data":{"command":" c:; cd 'c:\\University\\Honours\\Test'; & 'c:\\Python311\\python.exe' 'c:\\Users\\risse\\.vscode\\extensions\\ms-python.debugpy-2025.8.0-win32-x64\\bundled\\libs\\debugpy\\launcher' '52098' '--' 'C:\\University\\Honours\\Test\\main.py' ","durationMs":3976,"result":"\u001b]633;C\u0007pygame 2.6.1 (SDL 2.28.4, Python 3.11.4)\r\nHello from the pygame community. https://www.pygame.org/contribute.html\r\nhello world\r\nHellow world\r\n"}}
{"eventType":"editorFileSwitch","timestamp":"2025-06-04T15:59:23.517Z","sessionId":"4820b9cd-7ae2-46f5-9356-4594292853b61749052727079","machineId":"fd4a8ea53364d533d6ee2311b870e28da1dbe5fd5041115f12000ffdebc1c20f","githubUsername":"StijnRis","data":{"documentPath":"c:\\University\\Honours\\Test\\main.py"}}
